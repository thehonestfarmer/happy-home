// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type BlogPostDocumentDataSlicesSlice = BlogTitleSlice;

/**
 * Content for blog post documents
 */
interface BlogPostDocumentData {
  /**
   * Slice Zone field in *blog post*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_post.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<BlogPostDocumentDataSlicesSlice> /**
   * Meta Title field in *blog post*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: blog_post.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *blog post*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: blog_post.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *blog post*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_post.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * blog post document from Prismic
 *
 * - **API ID**: `blog_post`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogPostDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<BlogPostDocumentData>,
    "blog_post",
    Lang
  >;

export type AllDocumentTypes = BlogPostDocument;

/**
 * Primary content in *BlogTitle → Default → Primary*
 */
export interface BlogTitleSliceDefaultPrimary {
  /**
   * title field in *BlogTitle → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Some title here
   * - **API ID Path**: blog_title.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * subtitle field in *BlogTitle → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: some summary
   * - **API ID Path**: blog_title.default.primary.subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.RichTextField;
}

/**
 * Default variation for BlogTitle Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type BlogTitleSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<BlogTitleSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *BlogTitle*
 */
type BlogTitleSliceVariation = BlogTitleSliceDefault;

/**
 * BlogTitle Shared Slice
 *
 * - **API ID**: `blog_title`
 * - **Description**: BlogTitle
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type BlogTitleSlice = prismic.SharedSlice<
  "blog_title",
  BlogTitleSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      BlogPostDocument,
      BlogPostDocumentData,
      BlogPostDocumentDataSlicesSlice,
      AllDocumentTypes,
      BlogTitleSlice,
      BlogTitleSliceDefaultPrimary,
      BlogTitleSliceVariation,
      BlogTitleSliceDefault,
    };
  }
}
